name: Replace file content
description: replace file content

inputs:
  targetDirectory:
    description: working directory
    default: tmp/target
    required: true
  syncIgnore:
    description: working directory
    default: tmp/target
    required: true
  replacementExtentions:
    required: true
    description: list of extentions to replace, separated by ','
    default: "*.ts,*.sh,*.yaml"
  replacementContents:
    required: true
    description: list of contents to replace, separated by ',' and '|' - separate source target content\
    default: "source:content:1|target:conten:1,source-content-1|target-content-1"

runs:
  using: composite

  steps:
    - name: Replace file content
      shell: bash
      working-directory: ${{ inputs.targetDirectory }}
      env:
        REPLACMENT_EXTENTIONS: ${{ inputs.replacementExtentions }}
        REPLACEMENT_CONTENTS: ${{ inputs.replacementContents }}
      run: |
        IFS=',' read -r -a replacement_extentions <<< "$REPLACMENT_EXTENTIONS"
        IFS=',' read -r -a replacement_contents <<< "$REPLACEMENT_CONTENTS"

        find_conditions=""
        for extention in "${replacement_extentions[@]}"; do
          if [ -z "$find_conditions" ]; then
            find_conditions="-name \"$extention\""
          else
            find_conditions="$find_conditions -o -name \"$extention\""
          fi
        done

        sed_arguments=""
        for replacement_content in "${replacement_contents[@]}"; do
          sed_arguments+="-e 's|$replacement_content|g' "
        done

        eval "find . -type f \( $find_conditions \) -exec sed -i $sed_arguments" {} +
