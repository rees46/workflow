name: Create pull request on target repo
description: create pull request on target repo

inputs:
  targetDirectory:
    default: tmp/target
    description: Commit author GitGup token
    required: true
  githubToken:
    description: GitHup token
    required: true
  prTitle:
    description: PullRequest title
    default: Automated release
    required: false
  prBody:
    description: PullRequest body
    default: This is an automated pull request
    required: false
  reviewerUsername:
    description: PullRequest reviewer username
    default: TorinAsakura
    required: true
  lastPrAuthor:
    description: PullRequest reviewer username
    default: TorinAsakura
    required: true
  branchName:
    description: git branch name
    required: true

runs:
  using: composite

  steps:
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7
      id: cpr
      with:
        token: ${{ inputs.githubToken }}
        title: ${{ inputs.prTitle }}
        body: ${{ inputs.prBody }}
        base: ${{ github.event.repository.default_branch }}
        head: ${{ inputs.branchName }}
        assignees: ${{ inputs.lastPrAuthor }}
        reviewers: ${{ inputs.reviewerUsername }}
        draft: false

    - name: Enable Pull Request Automerge
      if: steps.cpr.outputs.pull-request-operation == 'created'
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        token: ${{ inputs.githubToken }}
        pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
        merge-method: squash

    # TODO rm
    # - name: Create Pull Request
    #   shell: bash
    #   working-directory: ${{ inputs.targetDirectory }}
    #   env:
    #     GITHUB_TOKEN: ${{ inputs.githubToken }}
    #     BRANCH_NAME: ${{ inputs.branchName }}
    #     LAST_PR_AUTHOR: ${{ inputs.lastPrAuthor }}
    #     REVIEWER: ${{ inputs.reviewerUsername }}
    #   run: |
    #     PR_TITLE="${{ inputs.prTitle }}"
    #     PR_BODY="${{ inputs.prBody }}"
    #     DEFAULT_BRANCH=$(gh repo view --json defaultBranchRef -q ".defaultBranchRef.name")
    #
    #     echo "Assigning PR to LAST_PR_AUTHOR: $LAST_PR_AUTHOR"
    #     echo "Adding REVIEWER: $REVIEWER as a reviewer"
    #
    #     gh pr create \
    #       --title "$PR_TITLE" \
    #       --body "$PR_BODY" \
    #       --base "$DEFAULT_BRANCH" \
    #       --head "$BRANCH_NAME" \
    #       --assignee "$LAST_PR_AUTHOR" \
    #       --reviewer "$REVIEWER"
