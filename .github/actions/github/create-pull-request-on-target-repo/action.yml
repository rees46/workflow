name: Create pull request on target repo
description: Completed step to create pull request on target repo

inputs:
  sourceDirectory:
    default: source
    description: Commit author GitGup token
    required: true
  targetDirectory:
    default: target
    description: Commit author GitGup token
    required: true
  managerUsername:
    description: PullRequest reviewer username
    default: TorinAsakura
    required: true
  githubToken:
    description: GitHup token
    required: true

runs:
  using: composite

  steps:
    - name: Get last merged PR author login
      shell: bash
      working-directory: ${{ inputs.sourceDirectory }}
      id: pr_author
      env:
        GH_TOKEN: ${{ inputs.githubToken }}
      run: |
        PR_NUMBER=$(gh pr list --state merged --limit 1 --json number --jq '.[0].number')
        LAST_PR_AUTHOR=$(gh pr view $PR_NUMBER --json author --jq '.author.login')
        echo "LAST_PR_AUTHOR=$LAST_PR_AUTHOR" >> $GITHUB_OUTPUT

    - name: Create commit
      shell: bash
      working-directory: ${{ inputs.targetDirectory }}
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
      run: |
        git config --global user.name Jade Smith
        git config --global user.email github-bot@rees46.com
        git add .
        echo "Changes to be committed:"
        git diff --staged
        git commit -m "feat: release"

    - name: Set branch name
      shell: bash
      id: branch_name
      run: echo "BRANCH_NAME=feat/new-release-$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

    - name: Checkout new branch and push
      shell: bash
      working-directory: ${{ inputs.targetDirectory }}
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
        BRANCH_NAME: ${{ steps.branch_name.outputs.BRANCH_NAME }}
      run: |
        git checkout -b $BRANCH_NAME
        git push --set-upstream origin $BRANCH_NAME

    - name: Create Pull Request
      shell: bash
      working-directory: ${{ inputs.targetDirectory }}
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
        BRANCH_NAME: ${{ steps.branch_name.outputs.BRANCH_NAME }}
        LAST_PR_AUTHOR: ${{ steps.pr_author.outputs.LAST_PR_AUTHOR }}
        MANAGER: ${{ inputs.managerUsername }}
      run: |
        PR_TITLE="Automated release"
        PR_BODY="This is an automated pull request to update from branch $BRANCH_NAME"
        DEFAULT_BRANCH=$(gh repo view --json defaultBranchRef -q ".defaultBranchRef.name")
        echo "Assigning PR to LAST_PR_AUTHOR: $LAST_PR_AUTHOR"
        echo "Adding MANAGER: $MANAGER as a reviewer"
        gh pr create --title "$PR_TITLE" --body "$PR_BODY" --base "$DEFAULT_BRANCH" --head $BRANCH_NAME --assignee $LAST_PR_AUTHOR --reviewer $MANAGER
