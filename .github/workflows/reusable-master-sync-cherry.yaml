name: Sync merged PR to stage

on:
  workflow_call:
    inputs:
      appId:
        description: 'github app id'
        required: true
        type: string
    secrets:
      githubToken:
        required: true
      sshSigningKey:
        required: true

jobs:
  sync-pr:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.githubToken }}

      - name: Setup Git
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.sshSigningKey }}" > ~/.ssh/signing_key
          chmod 600 ~/.ssh/signing_key
          git config --global gpg.format ssh
          git config --global user.signingkey ~/.ssh/signing_key
          git config --global commit.gpgsign true
          git config --global user.name "jade-smith-rs46"
          git config --global user.email "github-bot@rees46.com"

      - name: Fetch stage branch
        run: git fetch origin stage:stage

      - name: Create work branch from stage
        run: |
          BRANCH="sync-pr-${{ github.event.pull_request.number }}-to-stage-${{ github.run_id }}"
          git checkout stage
          git checkout -b "$BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Get PR commits
        id: commits
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
        run: |
          gh pr view ${{ github.event.pull_request.number }} --json commits | jq -r '.commits[] | select(.messageHeadline | startswith("Merge") | not) | .oid' > commits.txt
          cat commits.txt

      - name: Cherry-pick commits
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
        run: |
          FAILED=""
          MERGE_SHA="${{ github.event.pull_request.merge_commit_sha }}"

          if [ -n "$MERGE_SHA" ]; then
            echo "Detected squash or merge commit"

            PARENTS_COUNT=$(gh api repos/${{ github.repository }}/commits/$MERGE_SHA --jq '.parents | length')

            if [ "$PARENTS_COUNT" -eq 2 ]; then
              echo "Merge commit detected, cherry-picking all commits"
              while read sha; do
                if ! git cherry-pick -x -S "$sha"; then
                  git cherry-pick --abort
                  echo "$sha" >> failed.txt
                fi
              done < commits.txt
            else
              echo "Squash merge detected, cherry-picking merge_commit_sha"
              if ! git cherry-pick -x -S ${{ github.event.pull_request.merge_commit_sha }}; then
                git cherry-pick --abort
                echo "${{ github.event.pull_request.merge_commit_sha }}" >> failed.txt
              fi
            fi
          else
            echo "No merge_commit_sha — fallback to commits list"
            while read sha; do
              if ! git cherry-pick -x -S "$sha"; then
                git cherry-pick --abort
                echo "$sha" >> failed.txt
              fi
            done < commits.txt
          fi

          if [ -f failed.txt ]; then
            echo "FAILED=$(cat failed.txt | paste -sd ',')" >> $GITHUB_ENV
          fi

      - name: Push branch
        run: git push origin "$BRANCH"

      - name: Create PR into stage
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
          FAILED: ${{ env.FAILED }}
        run: |
          BODY="Автосинк PR #${{ github.event.pull_request.number }} (коммиты перенесены через cherry-pick)"
          if [ -n "$FAILED" ]; then
            BODY="$BODY. ⚠️ Не удалось перенести коммиты: $FAILED"
          fi

          gh pr create \
            --base stage \
            --head "$BRANCH" \
            --title "[Stage] ${{ github.event.pull_request.title }}" \
            --body "$BODY" \
            --assignee "${{ github.event.pull_request.user.login }}" \
            --repo "$GITHUB_REPOSITORY"

      - name: Enable auto-merge
        if: env.FAILED == ''
        run: |
          PR_NUMBER=$(gh pr list --head "$BRANCH" --json number -q '.[0].number')
          gh pr merge $PR_NUMBER --admin --merge
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}

      - name: Comment on original PR if failed
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
          FAILED: ${{ env.FAILED }}
        run: |
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          BODY="❌ Автосинк в stage завалился. Логи тут: $RUN_URL"
          if [ -n "$FAILED" ]; then
            BODY="$BODY. Не удалось перенести коммиты: $FAILED"
          fi

          gh pr comment ${{ github.event.pull_request.number }} \
            --body "$BODY" \
            --repo "$GITHUB_REPOSITORY"
