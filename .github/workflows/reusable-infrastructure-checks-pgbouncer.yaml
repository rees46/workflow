name: Reusable infrastructure checks PGBouncer

on:
  workflow_call:

jobs:
  check:
    name: Check PGBouncer
    runs-on: ubuntu-latest

    services:
      postgresql:
        image: ghcr.io/rees46/postgres-migrated:latest
        env:
          POSTGRES_PASSWORD: rails
          POSTGRES_USER: rails
          PGDATA: /data
        ports:
          - 5432:5432
        credentials:
          password: ${{ secrets.GITHUB_TOKEN }}
          username: ${{ github.repository_owner }}
        options: --name postgresql --hostname postgresql

      pgbouncer:
        image: bitnami/pgbouncer:latest
        env:
          PGBOUNCER_DATABASE: rees46
          POSTGRESQL_USERNAME: rails
          POSTGRESQL_PASSWORD: rails
          PGBOUNCER_CONF_DIR: /bitnami/pgbouncer/conf
          PGBOUNCER_SOCKET_DIR: /var/run/postgresql
        options: --name pgbouncer --hostname pgbouncer
        volumes:
          - ./:/var/run/postgresql
          - ./:/var/log/postgresql
          - ./:/etc/pgbouncer

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate PgBouncer
        run: |
          exit_code=0

           while read -r conf; do
            printf "\n\n"
            echo "ðŸ”ŽðŸ”ŽðŸ”Ž Validating $conf ðŸ”ŽðŸ”ŽðŸ”Ž"

            config_dir=$(dirname "$conf")
            docker cp "$conf" pgbouncer:/bitnami/pgbouncer/conf/pgbouncer.ini

            if [ -f "$config_dir/userlist.txt" ]; then
              echo "Found userlist.txt, copying to container."
              docker cp "$config_dir/userlist.txt" pgbouncer:/etc/pgbouncer/userlist.txt
            fi

            if docker exec pgbouncer pgbouncer -d /bitnami/pgbouncer/conf/pgbouncer.ini -R; then
              echo "RESULT: âœ…âœ…âœ…"
            else
              echo "RESULT: â›”â›”â›”"
              exit_code=1
            fi
          done < <(find $GITHUB_WORKSPACE -type f -name 'pgbouncer.ini')

          if [ "$exit_code" -eq 0 ]; then
            echo "âœ…âœ…âœ… All pgbouncer.ini and userlist.txt files are valid âœ…âœ…âœ…"
          else
            echo "â›”â›”â›” One or more configuration files are invalid â›”â›”â›”"
            exit 1
          fi
