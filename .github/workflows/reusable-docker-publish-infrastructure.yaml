name: Build and Publish Docker Images

on:
  workflow_call:
    secrets:
      SSH_PRIVATE_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get list of changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          json: 'true'

      - name: Output changed files
        run: |
          echo "Changed files: ${{ steps.changed-files.outputs.all_changed_files }}"

      - name: Check for Dockerfile changes
        id: dockerfile-check
        run: |
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
          echo "Changed files raw: $CHANGED_FILES"

          ALL_FILES=$(echo "$CHANGED_FILES" | tr -d '[]" ' | tr ',' '\n')

          CHANGED_DOCKERFILES=$(echo "$ALL_FILES" \
            | grep 'Dockerfile' \
            | grep -Ev '(^|/)\.' \
          )

          if [ -n "$CHANGED_DOCKERFILES" ]; then
            echo "Valid Dockerfile changes detected:"
            echo "$CHANGED_DOCKERFILES"
            echo "DOCKERFILE_CHANGED=true" >> $GITHUB_ENV
          else
            echo "No non-dot-folder Dockerfile changes."
            echo "DOCKERFILE_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Build and push Docker images
        if: env.DOCKERFILE_CHANGED == 'true'
        env:
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo $GITHUB_TOKEN | docker login ghcr.io -u $REPOSITORY_OWNER --password-stdin
          CHANGED_DOCKERFILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" \
            | tr -d '[]" ' \
            | tr ',' '\n' \
            | grep 'Dockerfile' \
            | grep -Ev '(^|/)\.' \
          )

          for DOCKERFILE in $CHANGED_DOCKERFILES; do
            DIR=$(dirname "$DOCKERFILE")
            IMAGE_NAME="ghcr.io/$REPOSITORY_OWNER/$(basename "$DIR"):latest"
            IMAGE_NAME_HASH=ghcr.io/$REPOSITORY_OWNER/$(basename "$DIR"):$(git rev-parse --short HEAD)-$(date +%s)
            echo "Building image $IMAGE_NAME"

            docker build -t "$IMAGE_NAME" -t "$IMAGE_NAME_HASH" --build-arg SSH_PRIVATE_KEY="$PRIVATE_KEY" "$DIR"

            docker push "$IMAGE_NAME"
            docker push "$IMAGE_NAME_HASH"
          done
