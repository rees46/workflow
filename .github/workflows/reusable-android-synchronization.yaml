name: Sync Android Repositories

env:
  TARGET_TMP_DIR_PATH: tmp/target
  SOURCE_TMP_DIR_PATH: tmp/source

on:
  workflow_call:
    inputs:
      appId:
        type: string
        required: true
      targetRepository:
        type: string
        required: true
      sourceDirname:
        type: string
        required: true
      targetDirname:
        type: string
        required: true
      syncIgnore:
        type: string
        required: true
        description: list of files to exclue, separated by ','
        default: ".git,.idea,LICENSE,"
      replacementExtentions:
        type: string
        required: true
        description: list of extentions to replace, separated by ','
        default: "*.ts,*.sh,*.yaml"
      replacementContents:
        type: string
        required: true
        description: list of contents to replace, separated by ',' and '|' - separate source target content\
        default: "source:content:1|target:conten:1,source-content-1|target-content-1"
    secrets:
      privateKey:
        required: true

jobs:
  run:
    name: Synchronization
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: appTokenStep
        with:
          app-id: ${{ vars.PERSONACLICK_COURIER_ID }}
          private-key: ${{ secrets.PERSONACLICK_COURIER_SECRET }}
          # TODO if need - provide it
          # owner: PersonaClick

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ${{ env.SOURCE_TMP_DIR_PATH }}
          token: ${{ steps.appTokenStep.outputs.token }}

      - name: Checkout remote repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.TARGET_TMP_DIR_PATH }}
          token: ${{ steps.appTokenStep.outputs.token }}
          repository: ${{inputs.targetRepository}}

      # TODO move to actions
      - name: Clean target directory except excluded files
        working-directory: ${{ env.TARGET_TMP_DIR_PATH }}
        env:
          SYNC_IGNORE: ${{ inputs.syncIgnore }}
        run: |
          IFS=',' read -r -a ignored_files <<< "$SYNC_IGNORE"

          exclude_conditions=""
          for ignored_file in "${ignored_files[@]}"; do
            exclude_conditions=" $exclude_conditions ! -name \"$ignored_file\""
          done

          eval find . -mindepth 1 -maxdepth 1 $exclude_conditions -exec rm -rf {} +

      # TODO move to actions
      # TODO need to separete .github/workflows/synchronization.yaml into personal directory
      - name: Sync files to remote repository
        env:
          SYNC_IGNORE: ${{ inputs.syncIgnore }}
        run: |
          IFS=',' read -r -a ignored_files <<< "$SYNC_IGNORE"

          exclude_conditions=""
          for ignored_file in "${ignored_files[@]}"; do
            exclude_conditions=" $exclude_conditions --exclude \"$ignored_file\""
          done

          echo $exclude_conditions

          eval rsync -av --progress "$SOURCE_TMP_DIR_PATH" "$TARGET_TMP_DIR_PATH" $exclude_conditions

      # TODO move to actions
      - name: Apply changes to files
        working-directory: ${{ env.TARGET_TMP_DIR_PATH }}
        env:
          REPLACMENT_EXTENTIONS: ${{ inputs.replacementExtentions }}
          REPLACEMENT_CONTENTS: ${{ inputs.replacementContents }}
        run: |
          IFS=',' read -r -a replacement_extentions <<< "$REPLACMENT_EXTENTIONS"
          IFS=',' read -r -a replacement_contents <<< "$REPLACEMENT_CONTENTS"

          find_conditions=""
          for extention in "${replacement_extentions[@]}"; do
            if [ -z "$find_conditions" ]; then
              find_conditions="-name \"$extention\""
            else
              find_conditions="$find_conditions -o -name \"$extention\""
            fi
          done

          sed_arguments=""
          for replacement_content in "${replacement_contents[@]}"; do
            sed_arguments+="-e 's|$replacement_content|g' "
          done

          eval "find . -type f \( $find_conditions \) -exec sed -i $sed_arguments" {} +

      # TODO move to actions
      - name: Rename directories
        working-directory: ${{ TARGET_TMP_DIR_PATH }}
        run: |
          find . -depth -type d -iname '*${{ inputs.sourceDirname }}*' -exec bash -c '
            for dir; do
              newdir=$(echo "$dir" | sed -e "s/${{ inputs.sourceDirname }}/${{ inputs.targetDirname }}/gi")
              if [ "$dir" != "$newdir" ]; then
                echo "Renaming directory: $dir -> $newdir"
                mv "$dir" "$newdir"
              fi
            done
          ' bash {} +

      # TODO move to actions
      # TODO why not delete tmp?
      - name: Copy files from targe dir
        run: |
          rsync -a "$TARGET_TMP_DIR_PATH" .

      - uses: rees46/workflow/.github/actions/github/pull-request/get-last-author@master
        id: lastPrAuthorStep
        with:
          githubToken: ${{ steps.appTokenStep.outputs.token }}

      - uses: rees46/workflow/.github/actions/github/utils/get-new-branch-name@master
        id: newBranchNameStep

      - uses: rees46/workflow/.github/actions/github/checkout/new-branch@master
        with:
          branchName: ${{ steps.newBranchNameStep.outputs.branchName }}

      - uses: rees46/workflow/.github/actions/github/push/create@master
        with:
          branchName: ${{ steps.newBranchNameStep.outputs.branchName }}
          githubToken: ${{ steps.appTokenStep.outputs.token }}

      - uses: rees46/workflow/.github/actions/github/commit/create@master
        with:
          branchName: ${{ steps.newBranchNameStep.outputs.branchName }}
          githubToken: ${{ steps.appTokenStep.outputs.token }}
          targetRepository: ${{ env.TARGET_REPO }}

      - uses: rees46/workflow/.github/actions/github/pull-request/create@master
        with:
          githubToken: ${{ steps.appTokenStep.outputs.token }}
          lastPrAuthor: ${{ steps.lastPrAuthorStep.outputs.lastPrAuthor }}
          branchName: ${{ steps.newBranchNameStep.outputs.branchName }}
