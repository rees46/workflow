name: Reusable Ruby publish migrated DB

on:
  workflow_call:
    inputs:
      fetchDepth:
        description: Checkout fetch depth
        default: 2
        type: number
        required: false
      commitMessage:
        description: Commit message to validate
        default: 'release/'
        type: string
        required: false
    outputs:
      is_valid:
        description: 'Whether merge is valid'
        value: ${{ jobs.validate-merge-commit.outputs.is_valid }}

jobs:
  validate-merge-commit:
    runs-on: ubuntu-latest
    outputs:
      is_valid: ${{ steps.check-merge.outputs.is_valid }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ inputs.fetchDepth }}

      - name: Check last commit message
        id: check-merge
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B HEAD)

          if [[ "$COMMIT_MSG" == *"${{ inputs.commitMessage }}"* ]]; then
            echo "❌ Found merge from release/: $COMMIT_MSG"
            echo "is_valid=false" >> $GITHUB_OUTPUT
            gh run cancel ${{ github.run_id }}
          else
            echo "🟢 Merge from release/ has not found: $COMMIT_MSG"
            echo "is_valid=true" >> $GITHUB_OUTPUT
          fi

          echo "Current outputs:"
          cat $GITHUB_OUTPUT
