name: Reusable infrastructure checks ansible

on:
  workflow_call:
    inputs:
      ANSIBLE_PATH:
        required: false
        default: ansible
        type: string
    secrets:
      SVC_CICD_PRIVATE_KEY:
        required: true

jobs:
  lint:
    uses: ansible/ansible-content-actions/.github/workflows/ansible_lint.yaml@main
    with:
      working_directory: ${{ inputs.ANSIBLE_PATH }}

  dry-run:
    name: Ansible dry-run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Set up ssh
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          PRIVATE_KEY: ${{ secrets.SVC_CICD_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add ~/.ssh/id_rsa

      - name: Ansible dry-run
        env:
          INVENTORY_PATH: ${{ steps.find_inventory.outputs.path }}
          ANSIBLE_PATH: ${{ inputs.ANSIBLE_PATH }}
        run: |
          exit_code=0

          while read -r dir; do
            for playbook in $(find "$dir" -type f -name '*.y*ml'); do
              if [ -f "$playbook" ]; then
                echo "ðŸ”ŽðŸ”ŽðŸ”Ž Validating playbook $playbook in $dir"

                cd $(dirname $playbook)
                ansible-playbook --check --private-key="~/.ssh/id_rsa" "$playbook"
                if [ $? -ne 0 ]; then
                  echo "ERROR: Playbook $playbook has issues."
                  exit_code=1
                fi
              fi
            done
          done < <(find $GITHUB_WORKSPACE/$ANSIBLE_PATH -type d -name 'playbooks')

          if [ $exit_code -eq 0 ]; then
            echo "All playbooks are valid."
          else
            echo "One or more playbooks are invalid."
            exit 1
          fi
