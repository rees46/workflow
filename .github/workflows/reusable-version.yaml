name: Reusable version

on:
  workflow_call:
    outputs:
      committed:
        description: 'Have the changes in version been committed?'
        value: ${{ jobs.run.outputs.committed }}
    inputs:
      node-version:
        description: 'Node version to run this workflow. Default: 18 as it is in action cache'
        default: '18'
        required: false
        type: string
      appId:
        description: 'App ID for committing and pushing'
        required: true
        type: string
      private:
        description: Should apply only to private?
        type: boolean
        required: false
        default: false
      checkChanges:
        description: Should run 'yarn --since'?
        type: boolean
        required: false
        default: true
      deferred:
        description: Should run 'yarn version --deferred'?
        type: boolean
        required: false
        default: true
      workingDirectory:
        description: Where the script should execute
        type: string
        required: false
        default: ./
    secrets:
      appSecret:
        required: true

jobs:
  run:
    name: Version
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}
    outputs:
      committed: ${{ steps.committer.outputs.committed }}

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.appId }}
          private-key: ${{ secrets.appSecret }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
          ref: master

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install
        run: yarn install --inline-builds
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Base Commit for master
        id: find_base_commit
        run: |
          echo "Finding base commit between HEAD and origin/master"
          BASE_COMMIT=$(git log --merges -n 2 --format=format:%H | tail -n 1)
          echo "baseCommit=$BASE_COMMIT" >> $GITHUB_OUTPUT
          echo "Base Commit: $BASE_COMMIT"

      - name: List changed workspaces
        env:
          BASE_COMMIT: ${{ steps.find_base_commit.outputs.baseCommit }}
        run: yarn workspaces list --since=$BASE_COMMIT^

      - name: Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IS_PRIVATE: ${{ inputs.private }}
          IS_DEFERRED: ${{ inputs.deferred }}
          SHOULD_CHECK_CHANGES: ${{ inputs.checkChanges }}
        run: |
          if [ $IS_PRIVATE == false ]; then
            PRIVATE_FLAG="--no-private"
          fi
          
          if [ $IS_DEFERRED == true ]; then
            DEFERRED_FLAG="--deferred"
            else
            DEFERRED_FLAG="--immediate"
          fi
          
          if [ $SHOULD_CHECK_CHANGES == true ]; then
            CHANGES_FLAG="--since=${{ steps.find_base_commit.outputs.baseCommit }}^"
            else
            CHANGES_FLAG="--all"
          fi
          
          yarn workspaces foreach $CHANGES_FLAG $PRIVATE_FLAG --verbose version patch $DEFERRED_FLAG

      - name: GitSign
        uses: chainguard-dev/actions/setup-gitsign@main

      - name: Create commit message
        id: commit_message
        env:
          BASE_COMMIT: ${{ steps.find_base_commit.outputs.baseCommit }}
        run: |
          INITIAL_MESSAGE=$'chore(common): versions\n\n'
          temp_file=$(mktemp)
          yarn workspaces foreach --since=$BASE_COMMIT exec "echo \"\$npm_package_name: \$npm_package_version \" >> $temp_file"
          MESSAGE=$(cat $temp_file)
          echo $(cat $temp_file)
          INITIAL_MESSAGE+=$MESSAGE
          INITIAL_MESSAGE="${INITIAL_MESSAGE//'%'/'%25'}"
          INITIAL_MESSAGE="${INITIAL_MESSAGE//$'\n'/'%0A'}"
          INITIAL_MESSAGE="${INITIAL_MESSAGE//$'\r'/'%0D'}"
          echo "commitMessage=$INITIAL_MESSAGE" >> $GITHUB_OUTPUT
          echo $INITIAL_MESSAGE
          rm $temp_file

      - name: Commit changes
        id: committer
        uses: EndBug/add-and-commit@v9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit: -S
          default_author: github_actions
          author_email: github-bot@rees46.com
          message: ${{ steps.commit_message.outputs.commitMessage }}
          add: '*.yml'
