name: Reusable infrastructure checks elasticsearch

on:
  workflow_call:

jobs:
  elastic:
    name: Check Elasticsearch
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: elasticsearch:6.8.0
        env:
          node.name: elastic
          discovery.type: single-node
        ports:
          - 9200:9200
          - 9300:9300
        volumes:
          - ./:/var/lib/elasticsearch68
          - ./:/var/log/elasticsearch68
          - ./:/var/snapshot/elasticsearch68
        options: >
          --env "discovery.type=single-node"
          --env "xpack.security.enabled=false"
          --name elasticsearch
          --hostname elasticsearch

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare elastic container
        run: |
          docker exec elasticsearch chmod 777 -R /var/lib
          docker exec elasticsearch chmod 777 -R /var/log
          docker exec elasticsearch chmod 777 -R /var/snapshot

      - name: Validate elastic
        run: |
          exit_code=0

          # ElasticSearch.yml
          while read -r conf; do
            printf "\n\n"
            echo "ðŸ”ŽðŸ”ŽðŸ”Ž Validating $conf ðŸ”ŽðŸ”ŽðŸ”Ž"

            config_dir=$(dirname "$conf")
            docker cp "$conf" elasticsearch:/usr/share/elasticsearch/config/elasticsearch.yml

            # if [ -f "$config_dir/jvm.options" ]; then
            #  echo "Found jvm.options, copying to container."
            #  docker cp "$config_dir/jvm.options" elasticsearch:/usr/share/elasticsearch/config/jvm.options
            # fi

            docker restart elasticsearch
            sleep 10

            if docker exec elasticsearch curl -s http://localhost:9200; then
              echo "RESULT: âœ…âœ…âœ…"
            else
              echo "RESULT: â›”â›”â›”"
              exit_code=1
            fi
          done < <(find $GITHUB_WORKSPACE -type f -name 'elasticsearch.yml')

          # ElasticSearch.yaml
          while read -r conf; do
            printf "\n\n"
            echo "ðŸ”ŽðŸ”ŽðŸ”Ž Validating $conf ðŸ”ŽðŸ”ŽðŸ”Ž"

            config_dir=$(dirname "$conf")
            docker cp "$conf" elasticsearch:/usr/share/elasticsearch/config/elasticsearch.yml

            # if [ -f "$config_dir/jvm.options" ]; then
            #  echo "Found jvm.options, copying to container."
            #  docker cp "$config_dir/jvm.options" elasticsearch:/usr/share/elasticsearch/config/jvm.options
            # fi

            docker restart elasticsearch
            sleep 10

            if docker exec elasticsearch curl -s http://localhost:9200; then
              echo "RESULT: âœ…âœ…âœ…"
            else
              echo "RESULT: â›”â›”â›”"
              exit_code=1
            fi
          done < <(find $GITHUB_WORKSPACE -type f -name 'elasticsearch.yaml')

          if [ "$exit_code" -eq 0 ]; then
            echo "âœ…âœ…âœ… All elasticsearch.yml and jvm.options files are valid âœ…âœ…âœ…"
          else
            echo "â›”â›”â›” One or more configuration files are invalid â›”â›”â›”"
            exit 1
          fi
