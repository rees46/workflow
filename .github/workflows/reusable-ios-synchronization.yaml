name: Sync iOS Repositories

env:
  WORKFLOW_REPO: "rees46/workflow"
  WORKFLOW_REPO_TMP_PATH: tmp/workflow/
  TARGET_TMP_DIR_PATH: tmp/target/
  SOURCE_TMP_DIR_PATH: tmp/source/

on:
  workflow_call:
    inputs:
      versionFilePath:
        type: string
        default: "version.properties"
      appId:
        type: string
        required: true
      targetRepository:
        type: string
        required: true
      repositoryOwner:
        type: string
        required: true
      sourceDirname:
        type: string
      targetDirname:
        type: string
      syncIgnore:
        type: string
        required: true
        description: list of files to exclue, separated by ','
        default: ".git,.idea,LICENSE,"
      replacementExtentions:
        type: string
        required: true
        description: list of extentions to replace, separated by ','
        default: "*.ts,*.sh,*.yaml"
      replacementContents:
        type: string
        required: true
        description: list of contents to replace, separated by ',' and '|' - separate source target content\
        default: "source:content:1|target:conten:1,source-content-1|target-content-1"
    secrets:
      privateKey:
        required: true

jobs:
  run:
    name: Synchronization
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: appTokenStep
        with:
          app-id: ${{ inputs.appId }}
          private-key: ${{ secrets.privateKey }}
          owner: ${{ inputs.repositoryOwner }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ${{ env.SOURCE_TMP_DIR_PATH }}
          token: ${{ steps.appTokenStep.outputs.token }}

      - name: Checkout remote repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.TARGET_TMP_DIR_PATH }}
          token: ${{ steps.appTokenStep.outputs.token }}
          repository: ${{inputs.targetRepository}}

      - name: Checkout Workflow Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.WORKFLOW_REPO }}
          path: ${{ env.WORKFLOW_REPO_TMP_PATH }}
          sparse-checkout: |
            scripts/multiplatform

      # TODO to action
      - name: Get current version from source
        working-directory: source
        env:
          FILE_PATH: ${{ inputs.versionFilePath }}
        id: versionSource
        run: |
          echo "Using source $FILE_PATH"
          if [ "$FILE_PATH" = "version.properties" ]; then
            version=$(../workflow/scripts/multiplatform/get-version-name.sh)
            echo "version=$version" >> $GITHUB_OUTPUT
          else
            current_version=$(awk -F"'" '/s.version *=/ {print $2}' "$FILE_PATH")
            echo "version=$current_version" >> $GITHUB_OUTPUT
          fi

      - uses: rees46/workflow/.github/actions/utils/fs/clean-dir@master
        with:
          targetDirectory: ${{ env.TARGET_TMP_DIR_PATH }}
          syncIgnore: ${{ inputs.syncIgnore }}

      - uses: rees46/workflow/.github/actions/utils/fs/sync-dirs@master
        with:
          syncIgnore: ${{ inputs.syncIgnore }}
          targetDirectory: ${{ env.TARGET_TMP_DIR_PATH }}
          sourceDirectory: ${{ env.SOURCE_TMP_DIR_PATH }}

      - uses: rees46/workflow/.github/actions/utils/fs/replace-file-content@master
        with:
          syncIgnore: ${{ inputs.syncIgnore }}
          targetDirectory: ${{ env.TARGET_TMP_DIR_PATH }}
          replacementExtentions: ${{ inputs.replacementExtentions }}
          replacementContents: ${{ inputs.replacementContents }}

      - uses: rees46/workflow/.github/actions/utils/fs/rename-dirs@master
        if: ${{ inputs.sourceDirname != '' && inputs.targetDirname != '' }}
        with:
          targetDirectory: ${{ env.TARGET_TMP_DIR_PATH }}
          sourceDirname: ${{ inputs.sourceDirname }}
          targetDirname: ${{ inputs.targetDirname }}

      - uses: rees46/workflow/.github/actions/utils/fs/sync-dirs@master
        with:
          targetDirectory: ${{ env.TARGET_TMP_DIR_PATH }}
          sourceDirectory: .

      - uses: rees46/workflow/.github/actions/github/pull-request/get-last-author@master
        id: lastPrAuthorStep
        with:
          githubToken: ${{ steps.appTokenStep.outputs.token }}

      - uses: rees46/workflow/.github/actions/github/utils/get-new-branch-name@master
        id: newBranchNameStep

      - uses: rees46/workflow/.github/actions/github/checkout/new-branch@master
        with:
          branchName: ${{ steps.newBranchNameStep.outputs.branchName }}

      # TODO to action
      - name: git add
        run: |
          git add --all -- . ':!tmp/'

      - uses: rees46/workflow/.github/actions/github/commit/create@master
        with:
          branchName: ${{ steps.newBranchNameStep.outputs.branchName }}
          githubToken: ${{ steps.appTokenStep.outputs.token }}
          targetRepository: ${{ inputs.targetRepository }}

      - uses: rees46/workflow/.github/actions/github/pull-request/create@master
        with:
          githubToken: ${{ steps.appTokenStep.outputs.token }}
          lastPrAuthor: ${{ steps.lastPrAuthorStep.outputs.lastPrAuthor }}
          branchName: ${{ steps.newBranchNameStep.outputs.branchName }}
