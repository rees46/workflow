name: Reusable publish

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node version to run this workflow. Default: 18 as it is in action cache'
        default: '18'
        required: false
        type: string
      appId:
        description: 'App ID for committing and pushing'
        required: true
        type: string
      onlyChangelog:
        type: boolean
        required: false
        default: false
        description: Should only create changelog without publish
      additionalBranch:
        type: string
        required: false
        default: ''
        description: Should it push to additional branches
      workingDirectory:
        description: Where the script should execute
        type: string
        required: false
        default: ./
    secrets:
      npmAuthToken:
        required: false
      appSecret:
        required: true

jobs:
  run:
    name: Publish
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.appId }}
          private-key: ${{ secrets.appSecret }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install
        run: yarn install --inline-builds

      - name: Find Base Commit for master
        id: find_base_commit
        run: |
          echo "Finding base commit between HEAD and origin/master"
          BASE_COMMIT=$(git log --merges -n 2 --format=format:%H | tail -n 1)
          echo "baseCommit=$BASE_COMMIT" >> $GITHUB_OUTPUT
          echo "Base Commit: $BASE_COMMIT"

      - name: Bump version
        run: yarn version apply --all

      - name: Generate changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_COMMIT: ${{ steps.find_base_commit.outputs.baseCommit }}
        run: yarn workspaces foreach --since=$BASE_COMMIT^ --verbose run changelog

      - name: Publish
        if: ${{ !inputs.onlyChangelog }}
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.npmAuthToken }}
          BASE_COMMIT: ${{ steps.find_base_commit.outputs.baseCommit }}
        run: yarn workspaces foreach --since=$BASE_COMMIT^ --verbose --topological --no-private npm publish --access public

      - name: GitSign
        uses: chainguard-dev/actions/setup-gitsign@main

      - name: Create commit message
        id: commit_message
        env:
          BASE_COMMIT: ${{ steps.find_base_commit.outputs.baseCommit }}
        run: |
          INITIAL_MESSAGE="chore(common): publish\n\n"
          temp_file=$(mktemp)
          yarn workspaces foreach --since=$BASE_COMMIT exec "echo \"\$npm_package_name: \$npm_package_version \" >> $temp_file"
          MESSAGE=$(cat $temp_file)
          INITIAL+=$MESSAGE
          echo "commitMessage=$INITIAL" >> $GITHUB_OUTPUT
          echo $INITIAL
          rm $temp_file

      - name: Commit changes
        if: ${{ !env.ACT }}
        id: committer
        uses: EndBug/add-and-commit@v9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit: -S
          default_author: github_actions
          author_email: github-bot@rees46.com
          message: ${{ steps.commit_message.outputs.commitMessage }}
          add: '["*.lock", "*.json", "*.yml", "*.md"]'

      - name: Cherry pick to additional branch
        if: inputs.additionalBranch != ''
        env:
          BRANCH: ${{ inputs.additionalBranch }}
          COMMIT_SHA: ${{ steps.committer.outputs.commit_long_sha }}
        run: |
          git config --global user.name github-actions
          git config --global user.email github-bot@rees46.com
          git switch $BRANCH
          git cherry-pick $COMMIT_SHA
          git push origin
