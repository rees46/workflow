name: Reusable Android Demo Shop Publish

on:
  workflow_call:
    inputs:
      githubAppId:
        required: true
        type: string
      packageName:
        required: true
        type: string
      aabReleasePath:
        required: true
        type: string
      propertiesFilePath:
        required: true
        type: string
    secrets:
      GITHUB_APP_PRIVATE_KEY:
        required: true
      GOOGLE_SERVICES_FILE_AS_BASE64:
        required: true
      GOOGLE_PLAY_SIGNING_KEY_FILE_AS_BASE64:
        required: true
      RELEASE_STORE_PASSWORD:
        required: true
      RELEASE_KEY_ALIAS:
        required: true
      RELEASE_KEY_PASSWORD:
        required: true
      PLAY_ACCOUNT_AS_BASE64:
        required: true

jobs:
  publish_and_version_bump:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.githubAppId }}
          private-key: ${{ secrets.GITHUB_APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Decode and create google-services.json
        run: |
          mkdir -p app/src/prod/release
          echo "$GOOGLE_SERVICES_JSON" | base64 -d > app/src/prod/release/google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_FILE_AS_BASE64 }}

      - name: Decode Google Play service account JSON
        id: decode
        run: |
          echo "${{ secrets.PLAY_ACCOUNT_AS_BASE64 }}" | base64 --decode > google-play-service-account.json
          playJson=$(cat google-play-service-account.json)

      - name: Decode Keystore
        run: |
          echo "$KEYSTORE_AS_BASE64" | base64 --decode > app/keystore.jks
        env:
          KEYSTORE_AS_BASE64: ${{ secrets.GOOGLE_PLAY_SIGNING_KEY_FILE_AS_BASE64 }}

      - name: Set up JDK 20
        uses: actions/setup-java@v4
        with:
          java-version: "20"
          distribution: "zulu"

      # Building release bundle
      - name: Build Release AAB
        run: ./gradlew bundleProdRelease
        env:
          SIGNING_STORE_FILE: ${{ github.workspace }}/app/keystore.jks
          SIGNING_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

      # Sending to Google Play
      - name: Deploy to Google Play Internal Testing
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: google-play-service-account.json
          packageName: ${{ inputs.packageName }}
          releaseFiles: ${{ inputs.aabReleasePath }}
          track: "internal"
          changesNotSentForReview: true
