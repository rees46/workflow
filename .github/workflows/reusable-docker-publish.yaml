name: Reusable docker publish

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node version to run this workflow. Default: 18.19 as it is in action cache'
        default: '18.19'
        required: false
        type: string
      changeLookUpPath:
        description: 'Which folder to look for changes and publish'
        default: ''
        required: false
        type: string

jobs:
  run:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Changed files
        id: changed_files
        uses: tj-actions/changed-files@v42

      - name: Check if any packages need build
        id: changed_packages
        run: |
          echo "packages=$(echo "$CHANGED_FILES" | grep 'packages/' | awk -F'/' '{print $2}' | uniq)" >> $"GITHUB_OUTPUT" 

      - name: Build and Push Docker images
        env:
          CHANGED_FILES: ${{ steps.changed_files.outputs.all_changed_files }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
        if: ${{ steps.changed_packages.outputs.packages }} != ''
        run: |
          echo "Trying to build $PACKAGES"
          PACKAGES=($(echo "$CHANGED_FILES" | tr ' ' '\n' | grep 'packages/' | awk -F'/' '{print $2}' | uniq))
          for package in $PACKAGES
          do
            echo "Building $package..."
            if [ -f "./docker/Dockerfile-$package" ]; then
              echo "Found Dockerfile for $package"
              image_name=ghcr.io/$REPOSITORY_OWNER/package-$package:latest
              docker build -f docker/Dockerfile-$package . -t $image_name
              echo $GITHUB_TOKEN | docker login ghcr.io -u $REPOSITORY_OWNER --password-stdin
              docker push $image_name
              echo "Pushed successfully $image_name"
            fi
          done
