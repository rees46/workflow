name: Reusable PHP PR checks

on:
  workflow_call:

jobs:
  run:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

      rabbit:
        image: rabbitmq:management-alpine
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672

      elastic-search:
        image: elasticsearch:8.13.4
        ports:
          - 9200:9200

      postgres:
        image: ghcr.io/rees46/postgres-migrated:latest
        env:
          POSTGRES_PASSWORD: rails
          POSTGRES_USER: rails
          PGDATA: /data
        ports:
          - 5432:5432
        credentials:
          password: ${{ secrets.GITHUB_TOKEN }}
          username: ${{ github.repository_owner }}

      clickhouse-server:
        image: ghcr.io/rees46/clickhouse-server-migrated:latest
        ports:
          - 8123:8123
        credentials:
          password: ${{ secrets.GITHUB_TOKEN }}
          username: ${{ github.repository_owner }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Changed files
        id: changed_files
        uses: tj-actions/changed-files@v42

      - name: Check if any packages need testing
        env:
          CHANGED_FILES: ${{ steps.changed_files.outputs.all_changed_files }}
        id: changed_packages
        run: |
          echo "packages=$(echo "$CHANGED_FILES" | grep 'packages/' | awk -F'/' '{print $2}' | uniq)" >> $GITHUB_OUTPUT
          echo "Changed packages"
          echo "$packages"

      - name: Set up PHP
        if: ${{ steps.changed_packages.outputs.packages != '' }}
        uses: shivammathur/setup-php@v2
        with:
          tools: composer
          extensions: event

      - name: Install dependencies
        if: ${{ steps.changed_packages.outputs.packages != '' }}
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run tests
        env:
          CHANGED_FILES: ${{ steps.changed_files.outputs.all_changed_files }}
        if: ${{ steps.changed_packages.outputs.packages != '' }}
        run: |
          PACKAGES=$(echo "$CHANGED_FILES" | tr ' ' '\n' | grep 'packages/' | awk -F'/' '{print $2}' | uniq)
          for package in $PACKAGES
          do
            echo "🏗️🏗️🏗️ Testing $package..."
            mv packages/$package/config/test_secrets.ini.example packages/$package/config/test_secrets.ini
            XDEBUG_MODE=coverage vendor/bin/phpunit --bootstrap=packages/$package/test/autoload.php --configuration=packages/$package/phpunit.xml
          done
