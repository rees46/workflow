name: Reusable PHP PR checks

on:
  workflow_call:

jobs:
  validate:
    continue-on-error: true
    name: Validate Composer Config
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']
        os: [ubuntu-latest]
    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          tools: composer
          extensions: imagick, sockets, bcmath, zip, xml, intl, gmp, pgsql, pcntl, event
          php-version: ${{ matrix.php }}

      - name: Validate Composer
        run: composer validate

  php-cs-fixer:
    continue-on-error: true
    name: Check Code Style
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']
        os: [ubuntu-latest]
    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          tools: composer
          extensions: imagick, sockets, bcmath, zip, xml, intl, gmp, pgsql, pcntl, event
          php-version: ${{ matrix.php }}

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Restore Composer Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer install --prefer-dist --no-interaction --no-progress

      - name: Check Code Style
        run: composer phpcs:check

  phpstan:
    continue-on-error: true
    name: Check Linter Issues
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']
        os: [ubuntu-latest]
    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          tools: composer
          extensions: imagick, sockets, bcmath, zip, xml, intl, gmp, pgsql, pcntl, event
          php-version: ${{ matrix.php }}

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Restore Composer Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer install --prefer-dist --no-interaction --no-progress

      - name: Static Analysis
        run: composer linter:check

  security:
    continue-on-error: true
    name: Security
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']
        os: [ubuntu-latest]
    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          tools: composer
          extensions: imagick, sockets, bcmath, zip, xml, intl, gmp, pgsql, pcntl, event
          php-version: ${{ matrix.php }}

      - name: Composer Audit
        run: composer audit --locked --abandoned=report

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']
        os: [ubuntu-latest]

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

      rabbit:
        image: rabbitmq:management-alpine
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672

      elasticsearch:
        image: elasticsearch:6.8.0
        env:
          node.name: elastic
          discovery.type: single-node
        ports:
          - 9200:9200
          - 9300:9300
        options: >
          --env "discovery.type=single-node"
          --env "xpack.security.enabled=false"

      postgres:
        image: ghcr.io/rees46/postgres-migrated:latest
        env:
          POSTGRES_PASSWORD: rails
          POSTGRES_USER: rails
          PGDATA: /data
        ports:
          - 5432:5432
        credentials:
          password: ${{ secrets.GITHUB_TOKEN }}
          username: ${{ github.repository_owner }}

      clickhouse-server:
        image: ghcr.io/rees46/clickhouse-server-migrated:latest
        ports:
          - 8123:8123
        credentials:
          password: ${{ secrets.GITHUB_TOKEN }}
          username: ${{ github.repository_owner }}

    steps:
      - uses: actions/checkout@v4

      - name: Copy files into Elasticsearch container
        run: |
          container_id=$(docker ps | grep 'elasticsearch:6.8.0' | awk '{ print $1 }')
          echo "Elasticsearch container ID: $container_id"
          docker exec "$container_id" mkdir -p /usr/share/elasticsearch/config/hunspell
          docker cp ./.config/elastic_dictionary/tr_TR "$container_id":/usr/share/elasticsearch/config/hunspell/tr_TR

      - id: changed_files
        uses: tj-actions/changed-files@v46.0.5

      - name: Check if any packages need testing
        id: changed_packages
        env:
          CHANGED_FILES: ${{ steps.changed_files.outputs.all_changed_files }}
          SEARCH_PATH: packages
        run: |
          echo "CHANGED_FILES: $CHANGED_FILES"

          packages=$(echo "$CHANGED_FILES" | tr ' ' '\n' | grep "^${SEARCH_PATH}/" | awk -F '/' '{print $2}' | uniq | tr '\n' ' ')
          echo "packages=${packages}" >> "$GITHUB_OUTPUT"

          echo "Found packages: $packages"

      - name: Set up PHP
        if: steps.changed_packages.outputs.packages != ''
        uses: shivammathur/setup-php@v2
        with:
          tools: composer
          extensions: imagick sockets, bcmath, zip, xml, intl, gmp, pgsql, pcntl, event
          php-version: ${{ matrix.php }}

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        if: steps.changed_packages.outputs.packages != ''
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Configure Elasticsearch for Hunspell
        run: |
          curl -si -X PUT "http://localhost:9200/_cluster/settings" -H 'Content-Type: application/json' -d'
          {
            "persistent": {
              "indices.analysis.hunspell.dictionary.location": "/usr/share/elasticsearch/config/hunspell"
            }
          }
          '

      - name: Run core tests
        if: steps.changed_packages.outputs.packages != ''
        run: |
          echo "🏗️🏗️🏗️ Testing core..."
          mv packages/core/config/test_secrets.ini.example packages/core/config/test_secrets.ini
          XDEBUG_MODE=coverage vendor/bin/phpunit --bootstrap=packages/core/test/autoload.php --configuration=packages/core/phpunit.xml

      - name: Run tests
        if: steps.changed_packages.outputs.packages != ''
        env:
          CHANGED_PACKAGES: ${{ steps.changed_packages.outputs.packages }}
        run: |
          for package in $CHANGED_PACKAGES
          do
            echo "🏗️🏗️🏗️ Testing $package..."
            if test -f "packages/$package/config/test_secrets.ini.example"; then 
              mv packages/$package/config/test_secrets.ini.example packages/$package/config/test_secrets.ini
              XDEBUG_MODE=coverage vendor/bin/phpunit --bootstrap=packages/$package/test/autoload.php --configuration=packages/$package/phpunit.xml
            fi
          done
