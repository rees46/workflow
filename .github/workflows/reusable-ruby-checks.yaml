name: Reusable Ruby PR checks

on:
  workflow_call:
    inputs:
      workingDirectory:
        description: Working direction for action
        default: ./
        type: string
        required: false
      rubyVersion:
        description: Ruby version to use
        default: '2.7.5'
        type: string
        required: false
      nodeVersion:
        description: Node version to use
        default: '20'
        type: string
        required: false

jobs:
  run:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

      rabbit:
        image: rabbitmq:management-alpine
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672

      postgres:
        image: postgres:alpine
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_USER: postgres
        ports:
          - 5432:5432

    steps:
      - name: PSQL client
        run: sudo apt-get install --yes --no-install-recommends postgresql-client

      - id: changed_files
        uses: tj-actions/changed-files@v47.0.0

      - name: Start postgres
        env:
          PGPASSWORD: test
          PGUSER: postgres
          PGHOST: localhost
        run: |
          psql -c "CREATE DATABASE rees46_test WITH OWNER postgres;"
          psql -c "CREATE DATABASE rees46_production WITH OWNER postgres;"
          psql -c "CREATE DATABASE rees46_clickhouse_rails_test WITH OWNER postgres;"
          psql -c "CREATE DATABASE rees46_rails_test WITH OWNER postgres;"
          psql -c "CREATE DATABASE rees46_clickhouse WITH OWNER postgres;"
          psql -c "CREATE DATABASE rees46_clickhouse_test WITH OWNER postgres;"
          psql -d postgres -c "SELECT version();"

      - uses: actions/checkout@v4

      - name: Needs ImageMagick
        run: |
          if grep -ri 'rmagick' Gemfile; then
            echo "🧙‍♂️ RMagick detected, installing ImageMagick..."
            sudo apt-get update
            sudo apt-get install -y --no-install-recommends imagemagick-6.q16 libmagickwand-dev
          else
            echo "No RMagick found, skipping ImageMagick install."
          fi

      - name: Check if NodeJS is needed
        id: nodejs
        run: |
          if test -f "package.json"; then
            echo "node_needed=true" >> "$GITHUB_OUTPUT"
          fi

      - if: ${{ steps.nodejs.outputs.node_needed == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodeVersion }}

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ inputs.rubyVersion }}
          bundler-cache: true

      - name: Yarn cache directory
        if: ${{ steps.nodejs.outputs.node_needed == 'true' }}
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        shell: bash

      - uses: actions/cache@v4
        if: ${{ steps.nodejs.outputs.node_needed == 'true' }}
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        if: ${{ steps.nodejs.outputs.node_needed == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn install --inline-builds

      - name: Prepare configs
        run: |
          if test -f "config/database.yml.example"; then
            mv ./config/database.yml.example ./config/database.yml
          fi
          if test -f "config/secrets.yml.example"; then
            mv ./config/secrets.yml.example ./config/secrets.yml
          fi

      - name: Prepare DB
        env:
          DISABLE_DATABASE_ENVIRONMENT_CHECK: 1
          RAILS_ENV: test
          PG_USER: postgres
          PG_PASSWORD: test
        run: |
          bin/rails db:environment:set
          bundle exec rake db:reset

      - name: Load clickhouse schema
        if: ${{ !cancelled() }}
        env:
          DISABLE_DATABASE_ENVIRONMENT_CHECK: 1
          RAILS_ENV: test
          PG_USER: postgres
          PG_PASSWORD: test
        run: bundle exec rake clickhouse:schema:load || bundle exec rake clickhouse:schema:load -- --simple

      - name: Test
        if: ${{ !cancelled() }}
        env:
          DISABLE_DATABASE_ENVIRONMENT_CHECK: 1
          RAILS_ENV: test
          PG_USER: postgres
          PG_PASSWORD: test
        run: bin/rspec

      - name: Bundle
        env:
          RAILS_ENV: test
        if: ${{ !cancelled() }}
        run: |
          if test -f "bin/bundle"; then
            bin/bundle
          else
            exit 0
          fi

      - name: Lint
        if: ${{ !cancelled() }}
        env:
          CHANGED_FILES: ${{ steps.changed_files.outputs.all_changed_files }}
        run: |
          set -e
          RUBY_FILES=$(for f in $CHANGED_FILES; do
            [[ "$f" == *.rb ]] && echo "$f"
          done)

          if [ -z "$RUBY_FILES" ]; then
            echo "No Ruby files changed, skipping rubocop"
            exit 0
          fi

          if bundle show rubocop > /dev/null 2>&1; then
            echo "Running rubocop..."
            bundle exec rubocop $RUBY_FILES
          else
            echo "Rubocop not installed, skipping lint step"
          fi
